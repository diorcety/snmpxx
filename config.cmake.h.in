/* config.h.in.  Generated from configure.ac by autoheader.  */

/* Define if you want the debug output support compiled in. */
#cmakedefine DEBUG @DEBUG@

/* Defines default log profile to use */
#cmakedefine DEFAULT_LOG_PROFILE @DEFAULT_LOG_PROFILE@

/* Define if you want the thread support compiled in. */
#cmakedefine ENABLE_THREADS @ENABLE_THREADS@

/* Define to 1 if you have the <arpa/inet.h> header file. */
#cmakedefine HAVE_ARPA_INET_H @CNF_HAVE_ARPA_INET_H@

/* Define to 1 if you have the `clock_gettime' function. */
#cmakedefine HAVE_CLOCK_GETTIME @CNF_HAVE_CLOCK_GETTIME@

/* Define to 1 if you have the <ctype.h> header file. */
#cmakedefine HAVE_CTYPE_H @CNF_HAVE_CTYPE_H@

/* Define to 1 if you have the declaration of `getaddrinfo', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_GETADDRINFO @HAVE_DECL_GETADDRINFO@

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H @HAVE_DLFCN_H@

/* Define to 1 if you have the <errno.h> header file. */
#cmakedefine HAVE_ERRNO_H @HAVE_ERRNO_H@

/* Define to 1 if you have the <float.h> header file. */
#cmakedefine HAVE_FLOAT_H @HAVE_FLOAT_H@

/* Define if getaddrinfo is there */
#cmakedefine HAVE_GETADDRINFO @HAVE_GETADDRINFO@

/* Define to 1 if you have the `gethostbyaddr' function. */
#cmakedefine HAVE_GETHOSTBYADDR @HAVE_GETHOSTBYADDR@

/* Define to 1 if you have the `gethostbyaddr_r' function. */
#cmakedefine HAVE_GETHOSTBYADDR_R @HAVE_GETHOSTBYADDR_R@

/* Define to 1 if you have the `gethostbyname' function. */
#cmakedefine HAVE_GETHOSTBYNAME @HAVE_GETHOSTBYNAME@

/* Define to 1 if you have the `gethostbyname2' function. */
#cmakedefine HAVE_GETHOSTBYNAME2 @HAVE_GETHOSTBYNAME2@

/* Define to 1 if you have the `gethostbyname_r' function. */
#cmakedefine HAVE_GETHOSTBYNAME_R @HAVE_GETHOSTBYNAME_R@

/* Define to 1 if you have the `gethostname' function. */
#cmakedefine HAVE_GETHOSTNAME @HAVE_GETHOSTNAME@

/* Define to 1 if you have the `getpid' function. */
#cmakedefine HAVE_GETPID @HAVE_GETPID@

/* Define to 1 if you have the `gettimeofday' function. */
#cmakedefine HAVE_GETTIMEOFDAY @HAVE_GETTIMEOFDAY@

/* Define to 1 if you have the `htonl' function. */
#cmakedefine HAVE_HTONL @HAVE_HTONL@

/* Define to 1 if you have the `inet_aton' function. */
#cmakedefine HAVE_INET_ATON @HAVE_INET_ATON@

/* Define to 1 if you have the `inet_ntoa' function. */
#cmakedefine HAVE_INET_NTOA @HAVE_INET_NTOA@

/* Define to 1 if you have the `inet_ntop' function. */
#cmakedefine HAVE_INET_NTOP @HAVE_INET_NTOP@

/* Define to 1 if you have the `inet_pton' function. */
#cmakedefine HAVE_INET_PTON @HAVE_INET_PTON@

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@

/* Define to 1 if you have the <io.h> header file. */
#cmakedefine HAVE_IO_H @HAVE_IO_H@

/* Define to 1 if you have the `isdigit' function. */
#cmakedefine HAVE_ISDIGIT @HAVE_ISDIGIT@

/* Define when libdes.h shall be favored over des.h */
#cmakedefine HAVE_LIBDES_H @HAVE_LIBDES_H@

/* Define to 1 if you have the `ws2_32' library (-lws2_32). */
#cmakedefine HAVE_LIBWS2_32 @HAVE_LIBWS2_32@

/* Define to 1 if you have the `wsock32' library (-lwsock32). */
#cmakedefine HAVE_LIBWSOCK32 @HAVE_LIBWSOCK32@

/* Define to 1 if you have the <limits.h> header file. */
#cmakedefine HAVE_LIMITS_H @HAVE_LIMITS_H@

/* Define to 1 if you have the `localtime_r' function. */
#cmakedefine HAVE_LOCALTIME_R @HAVE_LOCALTIME_R@

/* Define to 1 if you have the `malloc' function. */
#cmakedefine HAVE_MALLOC @HAVE_MALLOC@

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H @HAVE_MEMORY_H@

/* Define to 1 if you have the `memset' function. */
#cmakedefine HAVE_MEMSET @HAVE_MEMSET@

/* define if the compiler implements namespaces */
#cmakedefine HAVE_NAMESPACES @HAVE_NAMESPACES@

/* Define if g++ supports namespace std. */
#cmakedefine HAVE_NAMESPACE_STD @HAVE_NAMESPACE_STD@

/* Define to 1 if you have the <netdb.h> header file. */
#cmakedefine HAVE_NETDB_H @HAVE_NETDB_H@

/* Define to 1 if you have the <netinet/in.h> header file. */
#cmakedefine HAVE_NETINET_IN_H @HAVE_NETINET_IN_H@

/* Define to 1 if you have the `poll' function. */
#cmakedefine HAVE_POLL @HAVE_POLL@

/* Define to 1 if you have the <poll.h> header file. */
#cmakedefine HAVE_POLL_H @HAVE_POLL_H@

/* Define to 1 if you have the <process.h> header file. */
#cmakedefine HAVE_PROCESS_H @HAVE_PROCESS_H@

/* Define if you have POSIX threads libraries and header files. */
#cmakedefine HAVE_PTHREAD @HAVE_PTHREAD@

/* Define to 1 if you have the `realloc' function. */
#cmakedefine HAVE_REALLOC @HAVE_REALLOC@

/* Define to 1 if you have the `select' function. */
#cmakedefine HAVE_SELECT @HAVE_SELECT@

/* Define to 1 if you have the <signal.h> header file. */
#cmakedefine HAVE_SIGNAL_H @HAVE_SIGNAL_H@

/* Define to 1 if you have the `socket' function. */
#cmakedefine HAVE_SOCKET @HAVE_SOCKET@

/* define if the compiler supports ISO C++ standard library */
#cmakedefine HAVE_STD @HAVE_STD@

/* Define to 1 if stdbool.h conforms to C99. */
#cmakedefine HAVE_STDBOOL_H @HAVE_STDBOOL_H@

/* Define if g++ supports C++0x features. */
#cmakedefine HAVE_STDCXX_0X @HAVE_STDCXX_0X@

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@

/* Define to 1 if you have the <stdio.h> header file. */
#cmakedefine HAVE_STDIO_H @HAVE_STDIO_H@

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H @HAVE_STDLIB_H@

/* define if the compiler supports Standard Template Library */
#cmakedefine HAVE_STL @HAVE_STL@

/* Define to 1 if you have the `strcasecmp' function. */
#cmakedefine HAVE_STRCASECMP @HAVE_STRCASECMP@

/* Define to 1 if you have the `strchr' function. */
#cmakedefine HAVE_STRCHR @HAVE_STRCHR@

/* Define to 1 if you have the `strerror' function. */
#cmakedefine HAVE_STRERROR @HAVE_STRERROR@

/* Define to 1 if you have the `stricmp' function. */
#cmakedefine HAVE_STRICMP @HAVE_STRICMP@

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H @HAVE_STRINGS_H@

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H @HAVE_STRING_H@

/* Define to 1 if you have the `strstr' function. */
#cmakedefine HAVE_STRSTR @HAVE_STRSTR@

/* Define to 1 if the system has the type `struct sockaddr_in6'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_IN6 @HAVE_STRUCT_SOCKADDR_IN6@

/* Define to 1 if `ss_family' is a member of `struct sockaddr_storage'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY @HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY@

/* Define to 1 if `__ss_family' is a member of `struct sockaddr_storage'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_STORAGE___SS_FAMILY @HAVE_STRUCT_SOCKADDR_STORAGE___SS_FAMILY@

/* Define to 1 if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H @HAVE_SYS_PARAM_H@

/* Define to 1 if you have the <sys/select.h> header file. */
#cmakedefine HAVE_SYS_SELECT_H @HAVE_SYS_SELECT_H@

/* Define to 1 if you have the <sys/socket.h> header file. */
#cmakedefine HAVE_SYS_SOCKET_H @HAVE_SYS_SOCKET_H@

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@

/* Define to 1 if you have the <sys/timeb.h> header file. */
#cmakedefine HAVE_SYS_TIMEB_H @HAVE_SYS_TIMEB_H@

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H @HAVE_SYS_TIME_H@

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@

/* Define to 1 if you have the <sys/unistd.h> header file. */
#cmakedefine HAVE_SYS_UNISTD_H @HAVE_SYS_UNISTD_H@

/* define if the compiler supports basic templates */
#cmakedefine HAVE_TEMPLATES @HAVE_TEMPLATES@

/* Define to 1 if you have the <time.h> header file. */
#cmakedefine HAVE_TIME_H @HAVE_TIME_H@

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@

/* Define to 1 if you have the <winsock2.h> header file. */
#cmakedefine HAVE_WINSOCK2_H @HAVE_WINSOCK2_H@

/* Define to 1 if you have the <winsock.h> header file. */
#cmakedefine HAVE_WINSOCK_H @HAVE_WINSOCK_H@

/* Define to 1 if you have the <ws2tcpip.h> header file. */
#cmakedefine HAVE_WS2TCPIP_H @HAVE_WS2TCPIP_H@

/* Define to 1 if you have the <wspiapi.h> header file. */
#cmakedefine HAVE_WSPIAPI_H @HAVE_WSPIAPI_H@

/* _XOPEN_SOURCE $HAVE_XOPEN_SOURCE */
#cmakedefine HAVE_XOPEN_SOURCE @HAVE_XOPEN_SOURCE@

/* Define to 1 if the system has the type `_Bool'. */
#cmakedefine HAVE__BOOL @HAVE__BOOL@

/* Define to 1 if you have the `_getpid' function. */
#cmakedefine HAVE__GETPID @HAVE__GETPID@

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#cmakedefine LT_OBJDIR @LT_OBJDIR@

/* Define to be the name of the operating system. */
#cmakedefine OS_TYPE @OS_TYPE@

/* Name of package */
#cmakedefine PACKAGE @PACKAGE@

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT @PACKAGE_BUGREPORT@

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME @PACKAGE_NAME@

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING @PACKAGE_STRING@

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME @PACKAGE_TARNAME@

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL @PACKAGE_URL@

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION @PACKAGE_VERSION@

/* Define to necessary symbol if this constant uses a non-standard name on
   your system. */
#cmakedefine PTHREAD_CREATE_JOINABLE @PTHREAD_CREATE_JOINABLE@

/* define SNMP_PP_IPv6 if you want to use IPv6 */
#cmakedefine SNMP_PP_IPv6 @SNMP_PP_IPv6@

/* Determine what socket length (socklen_t) data type is */
#cmakedefine SNMP_SOCKLEN_T @SNMP_SOCKLEN_T@

/* Define if ISO C++ 0x header files are present. */
#cmakedefine STDCXX_0X_HEADERS @STDCXX_0X_HEADERS@

/* Define if ISO C++ 1998 header files are present. */
#cmakedefine STDCXX_98_HEADERS @STDCXX_98_HEADERS@

/* Define if ISO C++ TR1 header files are present. */
#cmakedefine STDCXX_TR1_HEADERS @STDCXX_TR1_HEADERS@

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS @STDC_HEADERS@

/* Version number of package */
#cmakedefine VERSION @VERSION@

/* define _NO_SNMPv3 if you do not want to use SNMPv3 */
#cmakedefine _NO_SNMPv3 @_NO_SNMPv3@

/* define _SNMPv3 if you want to use SNMPv3 */
#cmakedefine _SNMPv3 @_SNMPv3@

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT32_T @_UINT32_T@

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT64_T @_UINT64_T@

/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT8_T @_UINT8_T@

/* Define to `int' if <sys/types.h> doesn't define. */
#cmakedefine gid_t ${gid_t}

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#cmakedefine inline @inline@
#endif

#cmakedefine HAVE_INT8_T
#cmakedefine HAVE_INT16_T
#cmakedefine HAVE_INT32_T
#cmakedefine HAVE_INT64_T
#cmakedefine HAVE_INTMAX_T

#cmakedefine HAVE_UINT8_T
#cmakedefine HAVE_UINT16_T
#cmakedefine HAVE_UINT32_T
#cmakedefine HAVE_UINT64_T

/*
 * Similarly for int16_t
 */
#if !defined(HAVE_INT16_T) && SIZE_OF_INT == 2
typedef int int16_t;
#define HAVE_INT16_T
#endif

#if !defined(HAVE_INT16_T) && SIZE_OF_SHORT == 2
typedef short int16_t;
#define HAVE_INT16_T
#endif

#if !defined(HAVE_INT16_T)
#error No 16-bit integer type was found.
#endif

/*
 * Similarly for int32_t
 */
#if !defined(HAVE_INT32_T) && SIZE_OF_INT == 4
typedef int int32_t;
#define HAVE_INT32_T
#endif

#if !defined(HAVE_INT32_T) && SIZE_OF_LONG == 4
typedef long int32_t;
#define HAVE_INT32_T
#endif

#if !defined(HAVE_INT32_T)
#error No 32-bit integer type was found.
#endif

/*
 * If we lack int64_t, define it to the first of __int64, int, long, and long long
 * that exists and is the right size.
 */
#if !defined(HAVE_INT64_T) && defined(HAVE___INT64)
typedef __int64 int64_t;
#define HAVE_INT64_T
#endif

#if !defined(HAVE_INT64_T) && SIZE_OF_INT == 8
typedef int int64_t;
#define HAVE_INT64_T
#endif

#if !defined(HAVE_INT64_T) && SIZE_OF_LONG == 8
typedef long int64_t;
#define HAVE_INT64_T
#endif

#if !defined(HAVE_INT64_T) && SIZE_OF_LONG_LONG == 8
typedef long long int64_t;
#define HAVE_INT64_T
#endif

#if !defined(HAVE_INT64_T)
#error No 64-bit integer type was found.
#endif

/*
 * Similarly for int8_t
 */
#if !defined(HAVE_INT8_T)
typedef char int8_t;
#define HAVE_INT8_T
#endif

#if !defined(HAVE_INT8_T)
#error No 8-bit integer type was found.
#endif


/* Define to `long long' if <sys/types.h> does not define. */
#cmakedefine off_t ${off_t}

/* Define to `int' if <sys/types.h> doesn't define. */
#cmakedefine pid_t ${pid_t}

/* Define to `unsigned int' if <sys/types.h> does not define. */
#cmakedefine size_t ${size_t}

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine ssize_t ${ssize_t}

/* Define to `int' if <sys/types.h> doesn't define. */
#cmakedefine uid_t ${uid_t}

/*
 * Similarly for uint16_t
 */
#if !defined(HAVE_UINT16_T) && SIZE_OF_UNSIGNED == 2
typedef unsigned uint16_t;
#define HAVE_UINT16_T
#endif

#if !defined(HAVE_UINT16_T) && SIZE_OF_UNSIGNED_SHORT == 2
typedef unsigned short uint16_t;
#define HAVE_UINT16_T
#endif

#if !defined(HAVE_UINT16_T)
#error No 16-bit unsigned integer type was found.
#endif

/*
 * Similarly for uint32_t
 */
#if !defined(HAVE_UINT32_T) && SIZE_OF_UNSIGNED == 4
typedef unsigned uint32_t;
#define HAVE_UINT32_T
#endif

#if !defined(HAVE_UINT32_T) && SIZE_OF_UNSIGNED_LONG == 4
typedef unsigned long uint32_t;
#define HAVE_UINT32_T
#endif

#if !defined(HAVE_UINT32_T)
#error No 32-bit unsigned integer type was found.
#endif

/*
 * Similarly for uint64_t
 */
#if !defined(HAVE_UINT64_T) && defined(HAVE_UNSIGNED___INT64)
typedef unsigned __int64 uint64_t;
#define HAVE_UINT64_T
#endif

#if !defined(HAVE_UINT64_T) && SIZE_OF_UNSIGNED == 8
typedef unsigned uint64_t;
#define HAVE_UINT64_T
#endif

#if !defined(HAVE_UINT64_T) && SIZE_OF_UNSIGNED_LONG == 8
typedef unsigned long uint64_t;
#define HAVE_UINT64_T
#endif

#if !defined(HAVE_UINT64_T) && SIZE_OF_UNSIGNED_LONG_LONG == 8
typedef unsigned long long uint64_t;
#define HAVE_UINT64_T
#endif

#if !defined(HAVE_UINT64_T)
#error No 64-bit unsigned integer type was found.
#endif



/*
 * Similarly for uint8_t
 */
#if !defined(HAVE_UINT8_T)
typedef unsigned char uint8_t;
#define HAVE_UINT8_T
#endif

#if !defined(HAVE_UINT8_T)
#error No 8-bit unsigned integer type was found.
#endif
